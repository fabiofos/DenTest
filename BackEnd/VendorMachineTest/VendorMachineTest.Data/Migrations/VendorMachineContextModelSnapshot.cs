// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendorMachineTest.Data.Context;

#nullable disable

namespace VendorMachineTest.Data.Migrations
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(VendorMachineContext))]
    partial class VendorMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("MachineLanguageId")
                        .HasColumnType("int");

                    b.Property<bool>("MaintenanceRequested")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MachineCurrencyId");

                    b.HasIndex("MachineLanguageId");

                    b.ToTable("Machine");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            MachineCurrencyId = 1,
                            MachineLanguageId = 1,
                            MaintenanceRequested = false
                        });
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.MachineCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineCurrency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Currency = "EUR"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Currency = "USD"
                        });
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.MachineLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineLanguage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Language = "EN"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Language = "DE"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Language = "FR"
                        });
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.MachineSlots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SlotName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("ProductId");

                    b.ToTable("MachineSlots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            MachineId = 1,
                            ProductId = 1,
                            SlotName = "Slot 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            MachineId = 1,
                            ProductId = 2,
                            SlotName = "Slot 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            MachineId = 1,
                            ProductId = 3,
                            SlotName = "Slot 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            MachineId = 1,
                            SlotName = "Slot 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            MachineId = 1,
                            SlotName = "Slot 5"
                        });
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Description = "Coca Cola",
                            Name = "COLA",
                            Price = 1m
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Description = "Chips",
                            Name = "Chips",
                            Price = 0.5m
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            Description = "Candy",
                            Name = "Candy",
                            Price = 1.65m
                        });
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.ProductStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductStock");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            ProductId = 1,
                            Quantidade = 8
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            ProductId = 2,
                            Quantidade = 12
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 3, 30, 19, 33, 21, 881, DateTimeKind.Utc).AddTicks(616),
                            ProductId = 3,
                            Quantidade = 0
                        });
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.Sales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.Machine", b =>
                {
                    b.HasOne("VendorMachineTest.Domain.Entities.MachineCurrency", "MachineCurrency")
                        .WithMany()
                        .HasForeignKey("MachineCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VendorMachineTest.Domain.Entities.MachineLanguage", "MachineLanguage")
                        .WithMany()
                        .HasForeignKey("MachineLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineCurrency");

                    b.Navigation("MachineLanguage");
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.MachineSlots", b =>
                {
                    b.HasOne("VendorMachineTest.Domain.Entities.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VendorMachineTest.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Machine");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.ProductStock", b =>
                {
                    b.HasOne("VendorMachineTest.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("VendorMachineTest.Domain.Entities.Sales", b =>
                {
                    b.HasOne("VendorMachineTest.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
